# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  ImGui_config = debug
  GLFW_config = debug
  yaml_cpp_config = debug
  spdlog_config = debug
  stb_image_config = debug
  SOIL_config = debug
  GLAD_config = debug
  cnpy_config = debug
  Artimes_config = debug

else ifeq ($(config),release)
  ImGui_config = release
  GLFW_config = release
  yaml_cpp_config = release
  spdlog_config = release
  stb_image_config = release
  SOIL_config = release
  GLAD_config = release
  cnpy_config = release
  Artimes_config = release

else ifeq ($(config),dist)
  ImGui_config = dist
  GLFW_config = dist
  yaml_cpp_config = dist
  spdlog_config = dist
  stb_image_config = dist
  SOIL_config = dist
  GLAD_config = dist
  cnpy_config = dist
  Artimes_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ImGui GLFW yaml-cpp spdlog stb_image SOIL GLAD cnpy Artimes

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: GLAD GLFW ImGui SOIL cnpy spdlog stb_image yaml-cpp

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C vendor/imgui -f Makefile config=$(ImGui_config)
endif

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C vendor/GLFW -f Makefile config=$(GLFW_config)
endif

yaml-cpp:
ifneq (,$(yaml_cpp_config))
	@echo "==== Building yaml-cpp ($(yaml_cpp_config)) ===="
	@${MAKE} --no-print-directory -C vendor/yaml-cpp -f Makefile config=$(yaml_cpp_config)
endif

spdlog:
ifneq (,$(spdlog_config))
	@echo "==== Building spdlog ($(spdlog_config)) ===="
	@${MAKE} --no-print-directory -C vendor/spdlog -f Makefile config=$(spdlog_config)
endif

stb_image:
ifneq (,$(stb_image_config))
	@echo "==== Building stb_image ($(stb_image_config)) ===="
	@${MAKE} --no-print-directory -C vendor/stb_image -f Makefile config=$(stb_image_config)
endif

SOIL:
ifneq (,$(SOIL_config))
	@echo "==== Building SOIL ($(SOIL_config)) ===="
	@${MAKE} --no-print-directory -C vendor/SOIL -f Makefile config=$(SOIL_config)
endif

GLAD:
ifneq (,$(GLAD_config))
	@echo "==== Building GLAD ($(GLAD_config)) ===="
	@${MAKE} --no-print-directory -C vendor/glad -f Makefile config=$(GLAD_config)
endif

cnpy:
ifneq (,$(cnpy_config))
	@echo "==== Building cnpy ($(cnpy_config)) ===="
	@${MAKE} --no-print-directory -C vendor/cnpy -f Makefile config=$(cnpy_config)
endif

Artimes: ImGui stb_image SOIL GLFW GLAD spdlog cnpy
ifneq (,$(Artimes_config))
	@echo "==== Building Artimes ($(Artimes_config)) ===="
	@${MAKE} --no-print-directory -C main -f Makefile config=$(Artimes_config)
endif

clean:
	@${MAKE} --no-print-directory -C vendor/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/yaml-cpp -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/spdlog -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/stb_image -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/SOIL -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/glad -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/cnpy -f Makefile clean
	@${MAKE} --no-print-directory -C main -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ImGui"
	@echo "   GLFW"
	@echo "   yaml-cpp"
	@echo "   spdlog"
	@echo "   stb_image"
	@echo "   SOIL"
	@echo "   GLAD"
	@echo "   cnpy"
	@echo "   Artimes"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"